generator client {
  provider = "prisma-client-js"
  output   = "./generated"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id         String      @id @default(uuid())
  name       String
  email      String      @unique
  password   String
  characters Character[]
}

enum Attribute {
  LIGHT_ATTRIBUTE
  DARK_ATTRIBUTE
  FIRE_ATTRIBUTE
  WATER_ATTRIBUTE
  EARTH_ATTRIBUTE
  WIND_ATTRIBUTE
}

enum Rarity {
  COMMON
  UNCOMMON
  RARE
  EPIC
  LEGENDARY
  MYTHICAL
  HYPOTHETICAL
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
  EXTREMELY_HARD
  HEROIC_DEED
  WORLD_ENDING_THREAT
  BEYOND_HUMAN_COMPREHENSION
}

enum Severity {
  MILD
  MEDIUM
  HIGH
  EXTREME
}

enum Weight {
  LIGHT
  MEDIUM
  HEAVY
  SUPER_HEAVY
}

model Item {
  id            String      @id @default(uuid())
  name          String
  attributes    Attribute[]
  rarity        Rarity
  defense       Int
  speed         Int
  agility       Int
  requiredLevel Int
  origin        String
  creator       Character?  @relation(fields: [creatorId], references: [id])
  creatorId     String?     @unique
  weight        Weight
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  durability    Int
  // Discriminator field to distinguish between Armor and Weapon
  type   String
  Weapon Weapon[]
  Armor  Armor[]
}

model Weapon {
  id          String     @id @default(uuid())
  baseAttack  Int
  // Relation to the shared fields in Item
  item        Item       @relation(fields: [id], references: [id])
  Character   Character? @relation(fields: [characterId], references: [id])
  characterId String?
}

model Armor {
  id          String     @id @default(uuid())
  armorSetId  String
  ArmorSet    ArmorSet   @relation(fields: [armorSetId], references: [id])
  // Relation to the shared fields in Item
  item        Item       @relation(fields: [id], references: [id])
  Character   Character? @relation(fields: [characterId], references: [id])
  characterId String?
}

model ArmorSet {
  id       String   @id @default(uuid())
  name     String
  SetBonus Trait[]
  Buffs    Buff[]
  Debuffs  Debuff[]
  Armor    Armor[]
}

model Character {
  id               String           @id @default(uuid())
  name             String
  age              Int
  race             String
  class            String
  specialization   String
  hp               Int
  mana             Int
  stamina          Int
  poise            Int
  buffs            Buff[]           @relation("CharacterBuffs")
  debuffs          Debuff[]         @relation("CharacterDebuffs")
  blessings        Blessing[]       @relation("CharacterBlessings")
  curses           Curse[]          @relation("CharacterCurses")
  traits           Trait[]          @relation("CharacterTraits")
  inventory        Inventory        @relation(fields: [inventoryId], references: [id])
  inventoryId      String           @unique
  currentParty     Party?           @relation(fields: [partyId], references: [id])
  partyId          String? // Optional, can be null if not in a party
  titles           String[]
  characterTraits  CharacterTrait[]
  characterTraitId Int
  craftedWeapons   Weapon[]
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  User             User             @relation(fields: [userId], references: [id])
  userId           String
  Armor            Armor[]
  Item             Item?
}

model Debuff {
  id          String      @id @default(uuid())
  name        String
  description String
  effect      String
  severity    Severity
  rarity      Rarity
  difficulty  Difficulty
  obtain      String
  remove      String?
  characters  Character[] @relation("CharacterDebuffs")
  ArmorSet    ArmorSet[]
}

model Buff {
  id          String      @id @default(uuid())
  name        String
  description String
  effect      String
  severity    Severity
  rarity      Rarity
  difficulty  Difficulty
  obtain      String
  characters  Character[] @relation("CharacterBuffs")
  ArmorSet    ArmorSet[]
}

model Curse {
  id          String      @id @default(uuid())
  name        String
  description String
  effect      String
  severity    Severity
  rarity      Rarity
  difficulty  Difficulty
  obtain      String
  remove      String?
  characters  Character[] @relation("CharacterCurses")
}

model Blessing {
  id          String      @id @default(uuid())
  name        String
  description String
  effect      String
  severity    Severity
  rarity      Rarity
  difficulty  Difficulty
  obtain      String
  characters  Character[] @relation("CharacterBlessings")
}

model Trait {
  id          String      @id @default(uuid())
  name        String
  description String
  effect      String
  severity    Severity
  rarity      Rarity
  difficulty  Difficulty
  obtain      String
  remove      String?
  characters  Character[] @relation("CharacterTraits")
  ArmorSet    ArmorSet[]
}

model Inventory {
  id               String     @id @default(uuid())
  equippedWeapon   Json
  equippedArmor    Json
  equippedTrinkets Json
  inventoryItems   Json
  character        Character?
}

model CharacterTrait {
  id           String      @id @default(uuid())
  strength     Int
  agility      Int
  constitution Int
  intelligence Int
  empathy      Int
  willpower    Int
  awareness    Int
  Character    Character[]
}

model Party {
  id        String      @id @default(uuid())
  partyName String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  members   Character[]
}
